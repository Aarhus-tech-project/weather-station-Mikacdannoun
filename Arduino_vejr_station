#include <WiFiS3.h> // For Arduino UNO R4 WiFi
#include <PubSubClient.h>
#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>

// ===== WiFi Settings =====
const char* ssid = "h4prog";
const char* password = "1234567890";

// ===== MQTT Broker Settings =====
const char* mqtt_server = "192.168.109.21"; // <-- Replace with your Ubuntu server IP
const int mqtt_port = 1883;
const char* mqtt_topic = "vejrstationsprojekt/data";

// ===== BME280 Setup =====
Adafruit_BME280 bme; // I2C

// ===== WiFi + MQTT Clients =====
WiFiClient wifiClient;
PubSubClient client(wifiClient);

// ===== Connect to WiFi =====
void setup_wifi() {
  Serial.print("Forbinder til WiFi: ");
  Serial.println(ssid);

  while (WiFi.begin(ssid, password) != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }

  Serial.println("\n✅ WiFi forbundet");
  delay(500);
  Serial.print("IP: ");
  Serial.println(WiFi.localIP());
}

// ===== Reconnect to MQTT if needed =====
void reconnect_mqtt() {
  while (!client.connected()) {
    Serial.print("Forbinder til MQTT...");
    if (client.connect("arduinoClient")) {
      Serial.println("✅ MQTT forbundet");
    } else {
      Serial.print("❌ Fejl, rc=");
      Serial.print(client.state());
      Serial.println(" prøver igen om 5 sekunder");
      delay(5000);
    }
  }
}

void setup() {
  Serial.begin(115200);
  Wire.begin();

  if (!bme.begin(0x76)) {
    Serial.println("❌ Kunne ikke finde BME280!");
    while (1);
  }

  setup_wifi();
  client.setServer(mqtt_server, mqtt_port);

  if (client.connect("arduinoClient",
                    NULL, NULL,
                    "vejrstationsprojekt/status",
                    0,
                    true,
                    "offline")) {
      client.publish("vejrstationsprojekt/status", "online", true);
  }
}

void loop() {
  if (!client.connected()) {
    reconnect_mqtt();
  }
  client.loop();

  // Læs data fra BME280
  float temp = bme.readTemperature();
  float humidity = bme.readHumidity();
  float pressure = bme.readPressure() / 100.0F;

  // Lav JSON payload
  String payload = "{";
  payload += "\"temp\":" + String(temp, 2) + ",";
  payload += "\"humidity\":" + String(humidity, 2) + ",";
  payload += "\"pressure\":" + String(pressure, 2);
  payload += "}";

  // Send via MQTT
  client.publish(mqtt_topic, payload.c_str());
  Serial.print("Sendt MQTT data: ");
  Serial.println(payload);

  delay(5000); // Vent 5 sekunder før næste måling
}
